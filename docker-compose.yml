version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: nlf-postgres
    environment:
      POSTGRES_DB: national_league_finance
      POSTGRES_USER: nlf_user
      POSTGRES_PASSWORD: nlf_password
      POSTGRES_HOST_AUTH_METHOD: trust
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    networks:
      - nlf-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U nlf_user -d national_league_finance"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: nlf-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - nlf-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  # FastAPI Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: nlf-api
    env_file:                                  
      - .env.development 
    environment:
      - DATABASE_URL=postgresql://nlf_user:nlf_password@postgres:5432/national_league_finance
      - REDIS_URL=redis://redis:6379
      - ENVIRONMENT=development
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - nlf-network
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx (Production ready)
  # nginx:
  #   image: nginx:alpine
  #   container_name: nlf-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #     - ./ssl:/etc/nginx/ssl
  #   depends_on:
  #     - api
  #   networks:
  #     - nlf-network

volumes:
  postgres_data:
  redis_data:

networks:
  nlf-network:
    driver: bridge
